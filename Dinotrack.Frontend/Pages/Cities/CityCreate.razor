@page "/cities/create/{StateId:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")]

<h6>Estado: @state.Name</h6>
<hr/>
<h3>Crear Ciudad</h3>

<CityForm @ref="cityForm" City="city"  OnValidSubmit="CreateAsync" ReturnAction="Return"/>

@code {
    private City city = new();
    private CityForm? cityForm;
    private State state = new();

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [Parameter]
    public int StateId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var response = await repository.GetAsync<State>($"/api/states/{StateId}");
        if (response.Error)
        {
            if (response.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                Return();
            }
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        state = response.Response!;
    }

    private async Task CreateAsync()
    {
        city.StateId = StateId;
        var response = await repository.PostAsync("/api/cities", city);
        if (response.Error)
        {
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();

        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.TopRight,
                ShowConfirmButton = false,
                Timer = 2000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Ciudad creada exitosamente.");
    }

    private void Return()
    {
        cityForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/states/details/{StateId}");
    }
}
