@page "/brands/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService


<h3>Craer Marca</h3>

<BrandForm @ref="brandForm" Brand="brand" OnValidSubmit="CreateAsync" ReturnAction="Return" />


@code {
    private Brand brand = new();
    private BrandForm? brandForm;
    private async Task CreateAsync()
    {
        var response = await repository.PostAsync("/api/brands", brand);
        if (response.Error)
        {
            var message = await response.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        Return();
        var toast = sweetAlertService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.TopRight,
                ShowConfirmButton = false,
                Timer = 3000,
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Marca creada exitosamente");

    }

    private void Return()
    {
        brandForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/brands");
    }

}

